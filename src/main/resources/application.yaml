server:
  port: 8090

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus

#If you use a database then uncomment below lines and update db properties accordingly
spring:
  cloud:
    azure:
      active-directory:
        enabled: true
        profile:
          tenant-id: ${TENANT_ID}
        credential:
          client-id: ${CLIENT_ID}
          client-secret: ${CLIENT_SECRET}
        app-id-uri: ${APP_URI}
        authorization-clients:
          subscriptionManagementApi:
            authorization-grant-type: client_credentials
            scopes:
              - ${SUBSCRIPTION_MANAGEMENT_AZ_API}/.default
          accountManagementApi:
            authorization-grant-type: client_credentials
            scopes:
              - ${ACCOUNT_MANAGEMENT_AZ_API}/.default
          publicationServicesApi:
            authorization-grant-type: client_credentials
            scopes:
              - ${PUBLICATION_SERVICES_AZ_API}/.default
          channelManagementApi:
            authorization-grant-type: client_credentials
            scopes:
              - ${CHANNEL_MANAGEMENT_AZ_API}/.default
  jackson:
    serialization.write_dates_as_timestamps: false
    mapper:
      accept_case_insensitive_enums: true
  config:
    import: "optional:configtree:/mnt/secrets/pip-ss-kv/"
  application:
    name: PIP Data Management
  datasource:
    driver-class-name: org.postgresql.Driver

    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASS}
    properties:
      charSet: UTF-8
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 10000
      poolName: ConnectionPool
      maxLifetime: 7200000
      connectionTimeout: 30000
  jpa:
    properties:
      hibernate:
        format_sql: 'true'
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: 'true'
    database: POSTGRESQL
    hibernate:
      # Updated to 'none'. This is the default, and prevents auto updates in production
      ddl-auto: ${DB_UPDATE:none}
  servlet:
    multipart:
      max-file-size: 2MB
      max-request-size: 2MB
  # This is needed as locally, all tables are in a single schema. Flyway is only enabled on the clusters by default
  flyway:
    enabled: ${ENABLE_FLYWAY:false}


azure:
  blob:
    connection-string: ${CONNECTION_STRING}
    storage-account-name: ${STORAGE_ACCOUNT_NAME}
    artefact-container-name: artefact
    publications-container-name: publications
  managed-identity:
    client-id: ${MANAGED_IDENTITY_CLIENT_ID:}


service-to-service:
  subscription-management: ${SUBSCRIPTION_MANAGEMENT_URL:https://pip-subscription-management.staging.platform.hmcts.net}
  account-management: ${ACCOUNT_MANAGEMENT_URL:https://pip-account-management.staging.platform.hmcts.net}
  publication-services: ${PUBLICATION_SERVICES_URL:https://pip-publication-services.staging.platform.hmcts.net}
  channel-management: ${CHANNEL_MANAGEMENT_URL:https://pip-channel-management.staging.platform.hmcts.net}

payload:
  json:
    party-search-config:
      hearings-path: "$['courtLists'][*]['courtHouse']['courtRoom'][*]['session'][*]['sittings'][*]['hearing'][*]"
      cases-path: "$['case'][*]['caseNumber', 'caseName', 'caseUrn']"
      parties-individual-details-path: "$['party'][?(@.partyRole != null && !(@.partyRole size 0) && @.partyRole != null && !(@.partyRole =~ /^.*representative.*$/i))]['individualDetails']"
      parties-org-name-path: "$['party'][?(@.partyRole != null && !(@.partyRole size 0) && !(@.partyRole =~ /^.*representative.*$/i))]['organisationDetails']['organisationName']"
    search-values:
      cases: "$['courtLists'][*]['courtHouse']['courtRoom'][*]['session'][*]['sittings'][*]['hearing'][*]['case'][*]['caseNumber', 'caseName', 'caseUrn']"
validations:
  master-schema: "schemas/master_schema.json"
  validation-schemas:
    CIVIL_DAILY_CAUSE_LIST: "schemas/civil_daily_cause_list.json"
    FAMILY_DAILY_CAUSE_LIST: "schemas/family_daily_cause_list.json"
    SJP_PUBLIC_LIST: "schemas/single_justice_procedure_public.json"
    SJP_PRESS_LIST: "schemas/single_justice_procedure_press.json"
    SJP_DELTA_PRESS_LIST: "schemas/single_justice_procedure_press.json"
    CIVIL_AND_FAMILY_DAILY_CAUSE_LIST: "schemas/civil_and_family_daily_cause_list.json"
    SSCS_DAILY_LIST: "schemas/sscs_daily_list.json"
    SSCS_DAILY_LIST_ADDITIONAL_HEARINGS: "schemas/sscs_daily_list.json"
    COP_DAILY_CAUSE_LIST: "schemas/cop_daily_cause_list.json"
    CROWN_DAILY_LIST: "schemas/crown_daily_list.json"
    CROWN_WARNED_LIST: "schemas/crown_warned_list.json"
    MAGISTRATES_PUBLIC_LIST: "schemas/magistrates_public_list.json"
    CROWN_FIRM_LIST: "schemas/crown_firm_list.json"
    MAGISTRATES_STANDARD_LIST: "schemas/magistrates_standard_list.json"
    ET_FORTNIGHTLY_PRESS_LIST: "schemas/et_fortnightly_press_list.json"
    ET_DAILY_LIST: "schemas/et_daily_list.json"
    IAC_DAILY_LIST: "schemas/iac_daily_list.json"
    CARE_STANDARDS_LIST: "schemas/care_standards_list.json"
    PRIMARY_HEALTH_LIST: "schemas/primary_health_list.json"

springdoc:
  swagger-ui:
    path: /swagger-ui/

# Used for flyway to run DB migration on startup
dbMigration:
  runOnStartup: ${RUN_DB_MIGRATION_ON_STARTUP:true}

# Used to conditionally enable testing support API
testingSupport:
  enableApi: ${ENABLE_TESTING_SUPPORT_API:true}


