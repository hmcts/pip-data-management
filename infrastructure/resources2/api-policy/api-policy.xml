<policies>
  <inbound>
    <base />
    <validate-jwt header-name="Authorization" failed-validation-httpcode="401" failed-validation-error-message="Access denied due to invalid OAuth information">
      <openid-config url="https://login.microsoftonline.com/{TENANT_ID}/v2.0/.well-known/openid-configuration" />
      <audiences>
        <audience>{CLIENT_ID}</audience>
      </audiences>
      <issuers>
        <issuer>https://login.microsoftonline.com/{TENANT_ID}/v2.0</issuer>
      </issuers>
      <required-claims>
        <claim name="roles" match="all">
          <value>api.publisher.user</value>
        </claim>
      </required-claims>
    </validate-jwt>
    <cors>
      <allowed-origins>
        <origin>*</origin>
      </allowed-origins>
      <allowed-methods>
        <method>GET</method>
        <method>POST</method>
      </allowed-methods>
    </cors>
    <cache-lookup-value key="pipAuth" variable-name="pipAuthToken" />
    <choose>
        <when condition="@(context.Variables.GetValueOrDefault("pipAuthToken","") == "")">
          <send-request ignore-error="false" timeout="20" response-variable-name="pipDataManagementClientSecret" mode="new">
            <set-url>https://pip-ss-kv-{ENV}.vault.azure.net/secrets/app-pip-data-management-pwd/?api-version=7.0</set-url>
            <set-method>GET</set-method>
            <authentication-managed-identity resource="https://vault.azure.net" />
          </send-request>
          <set-variable name="clientSecret" value="@{
            var secret = ((IResponse)context.Variables["pipDataManagementClientSecret"]).Body.As<JObject>();
            return secret["value"].ToString();
          }" />
          <send-request ignore-error="false" timeout="20" response-variable-name="pipDataManagementScope" mode="new">
            <set-url>https://pip-ss-kv-{ENV}.vault.azure.net/secrets/app-pip-data-management-scope/?api-version=7.0</set-url>
            <set-method>GET</set-method>
            <authentication-managed-identity resource="https://vault.azure.net" />
          </send-request>
          <set-variable name="scope" value="@{
            var secret = ((IResponse)context.Variables["pipDataManagementScope"]).Body.As<JObject>();
            return secret["value"].ToString();
          }" />
          <send-request ignore-error="true" timeout="20" response-variable-name="bearerToken" mode="new">
            <set-url>https://login.microsoftonline.com/{TENANT_ID}/oauth2/v2.0/token</set-url>
            <set-method>POST</set-method>
            <set-header name="Content-Type" exists-action="override">
                <value>application/x-www-form-urlencoded</value>
            </set-header>
            <set-body>@{
              return "client_id={CLIENT_ID}&scope=" + (string)context.Variables["scope"] + "/.default&client_secret=" + (string)context.Variables["clientSecret"] + "&grant_type=client_credentials";
            }</set-body>
          </send-request>
          <set-variable name="pipAuthToken" value="@("Bearer " + (String)((IResponse)context.Variables["bearerToken"]).Body.As<JObject>()["access_token"])" />
          <cache-store-value key="pipAuth" value="@((String)context.Variables["pipAuthToken"])" duration="2700" />
        </when>
    </choose>
    <set-header name="Authorization" exists-action="override">
      <value>@((String)context.Variables["pipAuthToken"])</value>
    </set-header>
  </inbound>
  <backend>
    <base />
  </backend>
  <outbound>
    <base />
    <choose>
      <when condition="@(context.Response.StatusCode == 401)">
        <cache-remove-value key="pipAuth" />
        <return-response>
          <set-status code="502" />
          <set-header name="Content-Type">
            <value>application/json</value>
          </set-header>
          <set-body>@{
            return new JObject(
              new JProperty("message", "Successfully autheticated by SDS PIP APIM, however target system failed to autheticate. Please try again.")
            ).ToString();
          }
          </set-body>
        </return-response>
      </when>
      <when condition="@(context.Response.StatusCode == 403)">
        <cache-remove-value key="pipAuth" />
        <return-response>
          <set-status code="502" />
          <set-header name="Content-Type">
            <value>application/json</value>
          </set-header>
          <set-body>@{
            return new JObject(
              new JProperty("message", "Successfully authorized by SDS PIP APIM, however target system failed to authorize. Please try again.")
            ).ToString();
          }
          </set-body>
        </return-response>
      </when>
    </choose>
  </outbound>
  <on-error>
    <base />
  </on-error>
</policies>
